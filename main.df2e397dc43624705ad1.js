(()=>{"use strict";var t,e=new Uint8Array(16);function o(){if(!t&&!(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(e)}const n=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,a=function(t){return"string"==typeof t&&n.test(t)};for(var i=[],r=0;r<256;++r)i.push((r+256).toString(16).substr(1));const d=function(t,e,n){var r=(t=t||{}).random||(t.rng||o)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,e){n=n||0;for(var d=0;d<16;++d)e[n+d]=r[d];return e}return function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=(i[t[e+0]]+i[t[e+1]]+i[t[e+2]]+i[t[e+3]]+"-"+i[t[e+4]]+i[t[e+5]]+"-"+i[t[e+6]]+i[t[e+7]]+"-"+i[t[e+8]]+i[t[e+9]]+"-"+i[t[e+10]]+i[t[e+11]]+i[t[e+12]]+i[t[e+13]]+i[t[e+14]]+i[t[e+15]]).toLowerCase();if(!a(o))throw TypeError("Stringified UUID is invalid");return o}(r)};class s{constructor(t,e,o,n){this.author=e,this.title=t,this.pageCount=o,this.read=n,this.id=d()}getID(){return this.id}getAuthor(){return this.author}getTitle(){return this.title}getPageCount(){return this.pageCount}hasRead(){return this.read}setAuthor(t){this.author=t}setTitle(t){this.title=t}setPageCount(t){this.pageCount=t}setRead(t){this.read=t}toggleRead(){this.read=!this.read}}class l{constructor(t){console.log(t),this.book=t,this.domObject=null;const e=document.getElementById("templateBookCard").cloneNode(!0),o=t.getID();e.removeAttribute("id"),e.setAttribute("data-book-id",o);const n=e.querySelector(".book-title"),a=e.querySelector(".author-name"),i=e.querySelector(".page-count"),r=e.querySelector(".finished-checkbox"),d=e.querySelector(".edit-button"),s=e.querySelector(".del-button");this.domObject={container:e,editButton:d,deleteButton:s,titleLabel:n,authorLabel:a,pageLabel:i,finishedCheckbox:r},this.updateInformation()}insertDOM(){document.getElementById("libraryContainer").appendChild(this.domObject.container)}removeDOM(){const t=this.domObject.container;if(t.parentNode){t.parentNode.removeChild(t);const e=Object.keys(this.domObject);for(let t=0;t<e.length;++t){const o=e[t];this.domObject[o]=null}this.domObject=null}}updateInformation(){const{titleLabel:t,authorLabel:e,pageLabel:o,finishedCheckbox:n}=this.domObject;t.textContent=this.book.getTitle(),e.textContent=this.book.getAuthor(),o.textContent=this.book.getPageCount(),n.setAttribute("data-value",`${this.book.hasRead()}`)}getDeleteButton(){return this.domObject.deleteButton}getEditButton(){return this.domObject.editButton}}let u=!1,c=!1;const h="openFormButton",g="addBookForm",m="addBookCancelButton",k="addBookSubmitButton";let p=null,b=null;const B=()=>({titleField:document.getElementById("bookNameField"),authorField:document.getElementById("bookAuthorField"),pageCountField:document.getElementById("bookPageCountField"),bookReadCheckbox:document.getElementById("bookReadCheckbox")}),C=t=>{const{titleField:e,authorField:o,pageCountField:n,bookReadCheckbox:a}=B();console.log("\tsetting values..."),e.value=t.hasOwnProperty("title")?t.title:e.value,o.value=t.hasOwnProperty("author")?t.author:e.value,n.value=t.hasOwnProperty("pageCount")?t.pageCount:n.value,a.checked=t.hasOwnProperty("hasRead")?t.hasRead:a.checked},v=()=>{const t=B();return{title:t.titleField.value,author:t.authorField.value,pageCount:t.pageCountField.value,hasRead:t.bookReadCheckbox.checked}},y=t=>{const e=t.editing;console.log(`Editing? ${e}`);const o=document.getElementById(k),n=document.getElementById(m);if(!1===c){const t=document.getElementById(g);document.getElementById(h).classList.add("hidden"),t.classList.remove("hidden")}else!0===c&&(o.removeEventListener("click",p),n.removeEventListener("click",b),b=null,p=null);!1===e?(C({title:"",author:"",pageCount:0,hasRead:!1}),o.textContent="Add",p=()=>{const t=v();E.controller.addBook(t),f()},b=()=>{f()}):!0===e&&(u=!0,o.textContent="Edit",t.bookID,C(t.initialProperties),p=()=>{const e=v();E.controller.editBook(t.bookID,e),f()},b=()=>{f()}),o.addEventListener("click",p),n.addEventListener("click",b),c=!0},f=()=>{const t=document.getElementById(h),e=document.getElementById(g),o=document.getElementById(k),n=document.getElementById(m);t.classList.remove("hidden"),e.classList.add("hidden"),o.removeEventListener("click",p),n.removeEventListener("click",b),u=!1,c=!1};class E{static bookCardMap=new Map;static controller=null;static init(){const t=document.getElementById(h);document.getElementById(k),document.getElementById(m),t.addEventListener("click",(()=>{y({editing:!1})}))}static register(t){E.controller=t}static render(t){for(let e in t){const t=e.getID();!bookCardMap.has(t)||bookCardMap.get(t)}}static removeBook(t){console.log(`Removing book ${t}`),E.bookCardMap.has(t)||console.error(`Book is already removed from DOM (id ${t})`),console.log("\tRemoving from DOM"),E.bookCardMap.get(t).removeDOM(),console.log("\tRemoving from Map"),E.bookCardMap.delete(t)}static addBook(t){if(E.bookCardMap.has(t.getID()))return void console.error(`Book already exists (id ${t.getID()})`);const e=new l(t),o=e.getEditButton(),n=e.getDeleteButton();let a,i;a=()=>{y({editing:!0,bookID:t.getID(),initialProperties:{title:t.getTitle(),author:t.getAuthor(),pageCount:t.getPageCount(),hasRead:t.hasRead()}}),console.log("bruh")},i=()=>{E.controller.deleteBook(t.getID()),n.removeEventListener("click",i),o.removeEventListener("click",a)},o.addEventListener("click",a),n.addEventListener("click",i),E.bookCardMap.set(t.getID(),e),e.insertDOM()}static updateBook(t){E.bookCardMap.get(t).updateInformation()}}class I{static bookList=[];static addBook(t){const{title:e,author:o,pageCount:n,hasRead:a}=t,i=new s(e,o,n,a);I.bookList.push(i),E.addBook(i)}static removeBook(t){I.bookList=I.bookList.filter((e=>e.getID()!==t)),E.removeBook(t)}static editBook(t,e){const o=I.bookList.find((e=>e.getID()===t)),{title:n,author:a,pageCount:i,hasRead:r}=e;o.setAuthor(a),o.setTitle(n),o.setPageCount(i),o.setRead(r),E.updateBook(t)}}class R{static deleteBook(t){I.removeBook(t)}static addBook(t){I.addBook(t)}static editBook(t,e){console.log("Controller retrieved edit request"),I.editBook(t,e)}}!async function(){let t=!1,e=(o,n)=>{t||(t=!0,o("It's loaded!"),window.removeEventListener("load",e))};await new Promise(e);const o=[{title:"Common Sense Manual",author:"Naseer R.",pageCount:1,hasRead:!1},{title:"Apex Guide",author:"Captain Po",pageCount:100,hasRead:!0},{title:"Random Book",author:"muna",pageCount:1e3,hasRead:!1},{title:"Big Book",author:"muna",pageCount:99999,hasRead:!0}];E.register(R),E.init();for(let t=0;t<o.length;++t){const e=o[t];R.addBook(e)}}()})();